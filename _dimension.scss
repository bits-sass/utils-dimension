/* ==========================================================================
   Dimension utilities
   ========================================================================== */

/**
 * Variables
 *
 * It is recommended to override these.
 *
 * 1. Namespace of bits.css's classes.
 * 2. List of column variations
 */

$bits-ns: 'bits-' !default; /* 1 */
$bits-dimension-columns: (2 3 4 5 6 8 10 12) !default; /* 2 */

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.#{$bits-ns}u-sizeFit,
.#{$bits-ns}u-sizeFitAlt {
  display: block;
  float: left;
  width: auto !important;
}

.#{$bits-ns}u-sizeFitAlt {
  float: right;
}

/**
 * Make an element fill the remaining space.
 * N.B. This will hide overflow.
 */

.#{$bits-ns}u-sizeFill {
  display: block;
  overflow: hidden;
  width: auto !important;
}

/**
 * An alternative method to make an element fill the remaining space.
 * N.B. Do not use if child elements might be wider than the remaining space.
 * In Chrome, Safari, and Firefox it results in undesired layout.
 */

.#{$bits-ns}u-sizeFillAlt {
  display: table-cell;
  max-width: 100%;
  width: 10000px;
}

/**
 * Make an element the width of its parent.
 */

.#{$bits-ns}u-sizeFull {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  display: block;
  width: 100%;
}

/* Proportional widths
   ========================================================================== */

/**
 * Specifies the proportional width of an object
 *
 * Intentional redundancy build into each set of unit classes.
 *
 * ---------------
 * Example output:
 *
 * .bits-u-size1of2 {
 *   width: 50%;
 * }
 *
 * .bits-u-size1of3 {     |    .bits-u-size2of3 {
 *   width: 33.33333%;    |      width: 66.66667%;
 * }                      |    }
 *
 * .bits-u-size1of4 {     |    .bits-u-size2of4 {     |    .bits-u-size3of4 {
 *   width: 25%;          |      width: 50%;          |      width: 75%;
 * }                      |    }                      |    }
 *
 * ...
 *
 * .bits-u-size1of12 {   ...   .bits-u-size7of12 {   ...   .bits-u-size11of12 {
 *   width: 8.33333%;    ...     width: 58.33333%;   ...     width: 91.66667%;
 * }                     ...   }                     ...   }
 *
 */

@each $columns in $bits-dimension-columns {
  @for $position from 1 through $columns - 1 {
    .#{$bits-ns}u-size#{$position}of#{$columns} {
      width: (100 / ($columns / $position)) + unquote("%");
    }
  }
}